{"version":3,"sources":[" components/QuestionCard.jsx","constants.js","App.js","index.js"],"names":["QuestionCard","currentQuestion","setUserAnswers","currentIndex","handleOptionChange","e","prev","map","ans","index","target","value","answers","className","dangerouslySetInnerHTML","__html","question","option","type","name","onChange","id","htmlFor","App","useState","questions","setQuestions","setCurrentIndex","score","setScore","showGameOver","setShowGameOver","Array","fill","userAnswers","loading","setLoading","useEffect","fetch","then","res","json","data","console","log","results","result","incorrectAnswers","incorrect_answers","correctAnswer","correct_answer","sort","Math","random","override","css","closeOnDocumentClick","open","onClose","length","onClick","size","incrementScore","currentScore","forEach","answer","checkAnswers","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7ad13227.chunk.js","sourcesContent":["import React from \"react\";\nimport { QUESTIONS_LENGTH } from \"../constants\";\n\nconst QuestionCard = ({ currentQuestion, setUserAnswers, currentIndex }) => {\n  const handleOptionChange = (e) => {\n    setUserAnswers((prev) => {\n      return prev.map((ans, index) => {\n        if (index === currentIndex) {\n          return e.target.value;\n        } else {\n          return ans;\n        }\n      });\n    });\n  };\n\n  const { answers } = currentQuestion;\n\n  return (\n    <div className=\"question-card\">\n      <p className=\"question-number\">\n        Question : {currentIndex + 1} / {QUESTIONS_LENGTH}\n      </p>\n      <div\n        className=\"question\"\n        dangerouslySetInnerHTML={{ __html: currentQuestion.question }}\n      />\n      <div className=\"answers\">\n        {answers.map((option) => (\n          <div key={option}>\n            <input\n              type=\"radio\"\n              name=\"option\"\n              value={option}\n              onChange={handleOptionChange}\n              id={option}\n            />\n            <label htmlFor={option}>{option}</label>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default QuestionCard;\n","export const QUESTIONS_LENGTH = 10;\n","import React, { useEffect, useState } from \"react\";\nimport QuestionCard from \"./ components/QuestionCard\";\nimport Popup from \"reactjs-popup\";\nimport \"./App.css\";\nimport { css } from \"@emotion/react\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { QUESTIONS_LENGTH } from \"./constants\";\n\nfunction App() {\n  const [questions, setQuestions] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const [showGameOver, setShowGameOver] = useState(false);\n  const [userAnswers, setUserAnswers] = useState(\n    new Array(QUESTIONS_LENGTH).fill(null)\n  );\n  const [loading, setLoading] = useState(true);\n\n  const checkAnswers = () => {\n    let currentScore = 0;\n    userAnswers.forEach((answer, index) => {\n      if (answer === questions[index].correct_answer) {\n        currentScore++;\n      }\n    });\n    setScore(currentScore);\n  };\n\n  const shuffleAnswers = (incorrectAnswers, correctAnswer) => {\n    return [...incorrectAnswers, correctAnswer].sort(() => Math.random() - 0.5);\n  };\n\n  const incrementScore = () => {\n    setScore((prev) => prev + 1);\n  };\n\n  const handlePrev = () => {\n    setCurrentIndex((prev) => {\n      if (prev > 0) {\n        return prev - 1;\n      } else {\n        return prev;\n      }\n    });\n  };\n\n  const handlePlayAgain = () => {\n    setCurrentIndex(0);\n    setScore(0);\n    setShowGameOver(false);\n    setUserAnswers(new Array(QUESTIONS_LENGTH).fill(null));\n  };\n\n  const handleNext = () => {\n    setCurrentIndex((prev) => {\n      if (prev < questions.length - 1) {\n        return prev + 1;\n      } else {\n        checkAnswers();\n        setShowGameOver(true);\n        return prev;\n      }\n    });\n  };\n\n  useEffect(() => {\n    if (!showGameOver) {\n      setLoading(true);\n      fetch(\"https://opentdb.com/api.php?amount=10&category=18\")\n        .then((res) => res.json())\n        .then((data) => {\n          console.log(data.results);\n          setQuestions(\n            data.results.map((result) => {\n              return {\n                ...result,\n                answers: shuffleAnswers(\n                  result.incorrect_answers,\n                  result.correct_answer\n                ),\n              };\n            })\n          );\n\n          setLoading(false);\n        });\n    }\n  }, [showGameOver]);\n\n  const override = css`\n    display: block;\n    margin: 0 auto;\n  `;\n\n  return (\n    <div className=\"App\">\n      <Popup\n        closeOnDocumentClick={false}\n        open={showGameOver}\n        onClose={() => setShowGameOver(false)}\n      >\n        <h1 className=\"game-over\">Game Over</h1>\n        <p className=\"score\">\n          Your score is {score} / {questions.length}\n        </p>\n        <button className=\"play-again btn-primary\" onClick={handlePlayAgain}>\n          Play Again\n        </button>\n      </Popup>\n      <h1 className=\"heading\">Computer Science Trivia</h1>\n      <div className=\"trivia-container\">\n        {!loading ? (\n          <QuestionCard\n            currentIndex={currentIndex}\n            incrementScore={incrementScore}\n            setUserAnswers={setUserAnswers}\n            currentQuestion={questions[currentIndex]}\n          />\n        ) : (\n          <ClipLoader loading={loading} css={override} size={80} />\n        )}\n        <div className=\"buttons\">\n          <button className=\"btn-primary\" onClick={handlePrev}>\n            Prev\n          </button>\n          <button className=\"btn-primary\" onClick={handleNext}>\n            Next\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}